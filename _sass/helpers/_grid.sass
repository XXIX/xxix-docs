// Grid system
// Source: https://github.com/twbs/bootstrap-sass/

@mixin clearfix()
  &:before,
  &:after
    content: " "
    display: table

  &:after
    clear: both

@mixin container-fixed($gutter: $grid-gutter-width)
  margin-right: auto
  margin-left: auto
  padding-left:  ($gutter / 2)
  padding-right: ($gutter / 2)
  +clearfix

@mixin make-row($gutter: $grid-gutter-width)
  margin-left:  ($gutter / -2)
  margin-right: ($gutter / -2)
  +clearfix

@mixin make-palm-column($columns, $gutter: $grid-gutter-width)
  position: relative
  float: left
  width: percentage(($columns / $grid-columns))
  min-height: 1px
  padding-left:  ($gutter / 2)
  padding-right: ($gutter / 2)

@mixin make-palm-column-offset($columns)
  margin-left: percentage(($columns / $grid-columns))

@mixin make-palm-column-push($columns)
  left: percentage(($columns / $grid-columns))

@mixin make-palm-column-pull($columns)
  right: percentage(($columns / $grid-columns))

@mixin make-tab-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  padding-left:  ($gutter / 2)
  padding-right: ($gutter / 2)

  @media (min-width: $tab)
    float: left
    width: percentage(($columns / $grid-columns))


@mixin make-tab-column-offset($columns)
  @media (min-width: $tab)
    margin-left: percentage(($columns / $grid-columns))


@mixin make-tab-column-push($columns)
  @media (min-width: $tab)
    left: percentage(($columns / $grid-columns))


@mixin make-tab-column-pull($columns)
  @media (min-width: $tab)
    right: percentage(($columns / $grid-columns))



@mixin make-lap-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  padding-left:  ($gutter / 2)
  padding-right: ($gutter / 2)

  @media (min-width: $lap)
    float: left
    width: percentage(($columns / $grid-columns))


@mixin make-lap-column-offset($columns)
  @media (min-width: $lap)
    margin-left: percentage(($columns / $grid-columns))


@mixin make-lap-column-push($columns)
  @media (min-width: $lap)
    left: percentage(($columns / $grid-columns))


@mixin make-lap-column-pull($columns)
  @media (min-width: $lap)
    right: percentage(($columns / $grid-columns))



@mixin make-desk-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  padding-left:  ($gutter / 2)
  padding-right: ($gutter / 2)

  @media (min-width: $desk)
    float: left
    width: percentage(($columns / $grid-columns))


@mixin make-desk-column-offset($columns)
  @media (min-width: $desk)
    margin-left: percentage(($columns / $grid-columns))


@mixin make-desk-column-push($columns)
  @media (min-width: $desk)
    left: percentage(($columns / $grid-columns))


@mixin make-desk-column-pull($columns)
  @media (min-width: $desk)
    right: percentage(($columns / $grid-columns))



@mixin make-cinema-column($columns, $gutter: $grid-gutter-width)
  position: relative
  min-height: 1px
  padding-left:  ($gutter / 2)
  padding-right: ($gutter / 2)

  @media (min-width: $cinema)
    float: left
    width: percentage(($columns / $grid-columns))


@mixin make-cinema-column-offset($columns)
  @media (min-width: $cinema)
    margin-left: percentage(($columns / $grid-columns))


@mixin make-cinema-column-push($columns)
  @media (min-width: $cinema)
    left: percentage(($columns / $grid-columns))


@mixin make-cinema-column-pull($columns)
  @media (min-width: $cinema)
    right: percentage(($columns / $grid-columns))



@mixin make-grid-columns($i: 1, $list: ".col-palm-#{$i}, .col-tab-#{$i}, .col-lap-#{$i}, .col-desk-#{$i}, .col-cinema-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-palm-#{$i}, .col-tab-#{$i}, .col-lap-#{$i}, .col-desk-#{$i}, .col-cinema-#{$i}"

  #{$list}
    +box-sizing(border-box)
    position: relative
    min-height: 1px
    padding-left:  ($grid-gutter-width / 2)
    padding-right: ($grid-gutter-width / 2)

@mixin float-grid-columns($class, $i: 1, $list: ".col-#{$class}-#{$i}")
  @for $i from (1 + 1) through $grid-columns
    $list: "#{$list}, .col-#{$class}-#{$i}"

  #{$list}
    float: left

@mixin calc-grid-column($index, $class, $type)
  @if ($type == width) and ($index > 0)
    .col-#{$class}-#{$index}
      width: percentage(($index / $grid-columns))


  @if ($type == push) and ($index > 0)
    .col-#{$class}-push-#{$index}
      left: percentage(($index / $grid-columns))

  @if ($type == push) and ($index == 0)
    .col-#{$class}-push-0
      left: auto

  @if ($type == pull) and ($index > 0)
    .col-#{$class}-pull-#{$index}
      right: percentage(($index / $grid-columns))

  @if ($type == pull) and ($index == 0)
    .col-#{$class}-pull-0
      right: auto

  @if ($type == offset)
    .col-#{$class}-offset-#{$index}
      margin-left: percentage(($index / $grid-columns))

@mixin loop-grid-columns($columns, $class, $type)
  @for $i from 0 through $columns
    +calc-grid-column($i, $class, $type)

@mixin make-grid($class)
  +float-grid-columns($class)
  +loop-grid-columns($grid-columns, $class, width)
  +loop-grid-columns($grid-columns, $class, pull)
  +loop-grid-columns($grid-columns, $class, push)
  +loop-grid-columns($grid-columns, $class, offset)

.container
  +border-box
  +container-fixed

  +tab
    width: $container-tab

  +lap
    width: $container-lap

  +desk
    width: $container-desk

  +cinema
    width: $container-cinema
